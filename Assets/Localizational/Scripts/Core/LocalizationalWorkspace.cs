using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using Localizational.Editor;
using UnityEditor;
using UnityEngine;

namespace Localizational {

    public class LocalizationalWorkSpace {

        public static string resXFileEnding = ".resx";
        public static string txtFileEnding = ".txt";
        public static string metaFileEnding = ".meta";
        public static string prefabFileEnding = ".prefab";
        public static string rootLanguageName = "Language";

        //Auto generation folder names
        private const string PLUGIN_NAME = "Localizational";
        private const string WORKER_NAME = "Workspace";
        private const string AUTO_GENERATED_FOLDER_NAME = "AutoGenerated";
        private const string DATA_FOLDER_NAME = "Data";
        private const string LANGUAGE_DATA_FOLDER_NAME = "LanguageData";

        //File extension definitions
        private const string CULTURE_INFO_DATA_FOLDER_NAME = "LocCultureInfoData";
        private const string CULTURE_INFO_COLLECTION_FILE_NAME = "LocCultureInfo.xml";
        private const string AVAILABLE_CULTURES_FILE_NAME = "AvailableCultures.xml";

        //Folder names for generated resources
        private const string RESOURCES_FOLDER_NAME = "Resources";
        private const string AUDIO_FILE_FOLDER_NAME = "AudioFiles";
        private const string TEXTURES_FOLDER_NAME = "Textures";
        private const string PREFABS_FOLDER_NAME = "Prefabs";
        private const string TEXT_ASSETS_FOLDER_NAME = "TextAssets";
        private const string FONTS_FOLDER_NAME = "Fonts";

        public static bool Create() {
            if (Exists()) {
                return false;
            }

            if (DirectoryUtility.Create(WorkerFolderPath())) {
                if (!DirectoryUtility.Create(AutoGeneratedFolderPath())) {
                    return false;
                }

                if (!DirectoryUtility.Create(ResourcesFolderFilePath())) {
                    return false;
                }

                if (!DirectoryUtility.Create(DataFolderPath())) {
                    return false;
                }

                if (!DirectoryUtility.Create(LanguageDataFolderPath())) {
                    return false;
                }

                if (!GenerateCultureInfoCollection()) {
                    return false;
                }

                LanguageHelper.CreateRootResourceFile();
                AssetDatabase.Refresh();
                return true;
            }

            return false;
        }

        #region Lookups

        public static bool Exists() {
            return DirectoryUtility.ExistsRelative("/" + PLUGIN_NAME + "/" + WORKER_NAME);
        }

        public static string PluginFolderPath() {
            return Application.dataPath + "/" + PLUGIN_NAME;
        }

        public static string WorkerFolderPath() {
            return PluginFolderPath() + "/" + WORKER_NAME;
        }

        public static string AutoGeneratedFolderPath() {
            return WorkerFolderPath() + "/" + AUTO_GENERATED_FOLDER_NAME;
        }

        public static string DataFolderPath() {
            return WorkerFolderPath() + "/" + DATA_FOLDER_NAME;
        }

        public static string LanguageDataFolderPath() {
            return DataFolderPath() + "/" + LANGUAGE_DATA_FOLDER_NAME;
        }

        public static string CultureInfoDataFolderPath() {
            return DataFolderPath() + "/" + CULTURE_INFO_DATA_FOLDER_NAME;
        }

        public static string CultureInfoCollectionFilePath() {
            return CultureInfoDataFolderPath() + "/" + CULTURE_INFO_COLLECTION_FILE_NAME;
        }

        public static string RootLanguageFilePath() {
            return LanguageDataFolderPath() + "/" + rootLanguageName + resXFileEnding;
        }

        public static string LanguageFilePath(string languageCode) {
            return LanguageDataFolderPath() + "/" + rootLanguageName + "." + languageCode + resXFileEnding;
        }

        public static string ResourcesFolderFilePath() {
            return AutoGeneratedFolderPath() + "/" + RESOURCES_FOLDER_NAME;
        }

        public static string AvailableCulturesFilePath() {
            return ResourcesFolderFilePath() + "/" + AVAILABLE_CULTURES_FILE_NAME;
        }

        public static string LanguageRuntimeFolderPath(string languageCode) {
            return ResourcesFolderFilePath() + "/" + languageCode;
        }

        public static string LanguageAudioFolderPath(string languageCode) {
            return LanguageRuntimeFolderPath(languageCode) + "/" + AUDIO_FILE_FOLDER_NAME;
        }

        public static string LanguageTexturesFolderPath(string languageCode) {
            return LanguageRuntimeFolderPath(languageCode) + "/" + TEXTURES_FOLDER_NAME;
        }

        public static string LanguageTextAssetsFolderPath(string languageCode) {
            return LanguageRuntimeFolderPath(languageCode) + "/" + TEXT_ASSETS_FOLDER_NAME;
        }

        public static string LanguageFontsFolderPath(string languageCode) {
            return LanguageRuntimeFolderPath(languageCode) + "/" + FONTS_FOLDER_NAME;
        }

        public static string LanguagePrefabsFolderPath(string languageCode) {
            return LanguageRuntimeFolderPath(languageCode) + "/" + PREFABS_FOLDER_NAME;
        }

        public static string ResourcesFolderFilePathRelative() {
            return ResourcesFolderFilePath().Substring(Application.dataPath.Length);
        }

        public static string LanguageRuntimeFolderPathRelative(string languageCode) {
            return LanguageRuntimeFolderPath(languageCode).Substring(Application.dataPath.Length);
        }

        public static string LanguageAudioFolderPathRelative(string languageCode) {
            return LanguageAudioFolderPath(languageCode).Substring(Application.dataPath.Length);
        }

        public static string LanguageTexturesFolderPathRelative(string languageCode) {
            return LanguageTexturesFolderPath(languageCode).Substring(Application.dataPath.Length);
        }

        public static string LanguageTextAssetsFolderPathRelative(string languageCode) {
            return LanguageTextAssetsFolderPath(languageCode).Substring(Application.dataPath.Length);
        }

        public static string LanguageFontsFolderPathRelative(string languageCode) {
            return LanguageFontsFolderPath(languageCode).Substring(Application.dataPath.Length);
        }

        public static string LanguagePrefabsFolderPathRelative(string languageCode) {
            return LanguagePrefabsFolderPath(languageCode).Substring(Application.dataPath.Length);
        }
        #endregion


        public static bool GenerateCultureInfoCollection(LocCultureInfoCollection previousCollection) {
            if (!DirectoryUtility.Create(CultureInfoDataFolderPath())) {
                return false;
            }

            LocCultureInfoCollection availableCultures = new LocCultureInfoCollection();
            availableCultures.Version = LocCultureInfoCollection.LATEST_VERSION;

            if (previousCollection != null) {
                //Add all cultures from the previous collection in case any one of them were custom made
                foreach (var cultureInfo in previousCollection.CultureInfos) {
                    availableCultures.AddCultureInfo(cultureInfo);
                }
            }

            //Get all the cultures from Microsofts CultureInfo in the System.Globalization namespace
            CultureInfo[] cultureInfos = CultureInfo.GetCultures(System.Globalization.CultureTypes.AllCultures);
            foreach (var cultureInfo in cultureInfos) {
                if (availableCultures.FindCulture(cultureInfo.Name) == null) {
                    availableCultures.AddCultureInfo(new LocCultureInfo(cultureInfo.Name, cultureInfo.EnglishName, cultureInfo.NativeName, cultureInfo.TextInfo.IsRightToLeft));
                }
            }

       

            availableCultures.Serialize(CultureInfoCollectionFilePath());

            return true;
        }

        public static bool GenerateCultureInfoCollection() {
            return GenerateCultureInfoCollection(null);
        }


        public static void Initialize() {
           // throw new System.NotImplementedException();
        }
    }
}
